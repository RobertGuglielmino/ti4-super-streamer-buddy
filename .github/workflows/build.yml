name: Build and Release Electron App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
      
    - name: Install dependencies
      run: |
        npm config set legacy-peer-deps true
        npm install --no-audit --no-fund
      
    - name: Clean directories
      run: npm run clean
      
    - name: Build TypeScript
      run: npx tsc
      
    - name: Debug directory structure before copy
      run: |
        echo "Current directory structure:"
        ls -la
        echo "Electron directory structure:"
        ls -la electron || true
        echo "Electron public directory:"
        ls -la electron/public || true
      shell: bash
      
    - name: Copy HTML files to dist-electron
      run: |
        mkdir -p dist-electron/public
        cp -r electron/public/* dist-electron/public/ || true
        echo "Files copied to dist-electron/public:"
        ls -la dist-electron/public || true
      shell: bash
      
    - name: Build Vite
      run: npx vite build
      
    - name: Debug dist directory after build
      run: |
        echo "Dist directory structure:"
        ls -la dist || true
        echo "Dist-electron directory structure:"
        ls -la dist-electron || true
        echo "Dist-electron/public directory:"
        ls -la dist-electron/public || true
      shell: bash
      
    - name: Build Electron (Windows)
      if: matrix.os == 'windows-latest'
      run: npx electron-builder --win --config.win.signAndEditExecutable=false --publish never
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build Electron (macOS)
      if: matrix.os == 'macos-latest'
      run: npx electron-builder --mac --publish never
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build Electron (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: npx electron-builder --linux --publish never
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: |
          release/*.exe
          release/*.dmg
          release/*.AppImage
          release/*.snap
          release/*.deb
        if-no-files-found: ignore
        
    - name: Release assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*.exe
          release/*.dmg
          release/*.AppImage
          release/*.snap
          release/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
